<doc>	<legacy_id></legacy_id>	<name>mobileStoreRestorePurchases</name>	<type>command</type>	<syntax>		<example>mobileStoreRestorePurchases()</example>	</syntax>	<synonyms>	</synonyms>	<summary>instruct the store to re-send notifications of previously completed purchases</summary>	<examples><example><p>on mouseUp</p><p> mobileStoreEnablePurchaseUpdates</p><p> mobileStoreRestorePurchases </p><p>end mouseUp</p><p></p><p>on purchaseStateUpdate pPurchaseID, pProductID, pState</p><p> switch pState</p><p>  case "paymentReceived"</p><p>   ...</p><p>  case "error"</p><p>   ...</p><p>  case "invalidSKU"</p><p>   ...</p><p>  case "alreadyEntitled"</p><p>   ...</p><p>  case "restored"</p><p>   answer "restored"</p><p>   offerPurchasedItem pProductID</p><p>   mobileStoreConfirmPurchase pProductID</p><p>   mobileStoreDisablePurchaseUpdates</p><p>  case "cancelled"</p><p>   ...         </p><p> end switch</p><p>end purchaseStateUpdate</p></example>	</examples>	<history>		<introduced version="6.7">Added.</introduced>		<deprecated version=""></deprecated>		<removed version=""></removed>				<experimental version=""></experimental>		<nonexperimental version=""></nonexperimental>	</history>	<objects>	</objects>	<platforms>		<ios/>		<android/>	</platforms>	<classes>		<mobile/>	</classes>	<security>	</security>	<classification>	</classification>	<references>		<function tag="mobileStoreCanMakePurchase">mobileStoreCanMakePurchase function</function>		<function tag="mobileStorePurchaseError">mobileStorePurchaseError function</function>		<function tag="mobileStorePurchasedProducts">mobileStorePurchasedProducts function</function>		<function tag="mobileStoreProductProperty">mobileStoreProductProperty function</function>		<command tag="mobileStoreEnablePurchaseUpdates">mobileStoreEnablePurchaseUpdates command</command>		<command tag="mobileStoreDisablePurchaseUpdates">mobileStoreDisablePurchaseUpdates command</command>		<command tag="mobileStoreConsumePurchase">mobileStoreConsumePurchase command</command>		<command tag="mobileStoreConfirmPurchase">mobileStoreConfirmPurchase command</command>		<command tag="mobileStoreSetProductType">mobileStoreSetProductType command</command>		<command tag="mobileStoreRequestProductDetails">mobileStoreRequestProductDetails command</command>		<command tag="mobileStoreMakePurchase">mobileStoreMakePurchase command</command>		<command tag="mobileStoreVerifyPurchase">mobileStoreVerifyPurchase command</command>		<message tag="purchaseStateUpdate">purchaseStateUpdate message</message>		<message tag="productDetailsReceived">productDetailsReceived message</message>		<message tag="productRequestError">productRequestError message</message>	</references>	<description>	<overview>Use the <b>mobileStoreRestorePurchases</b> command to restore previously completed purchases</overview>		<parameters>		</parameters>	<value></value>	<comments>The command <b>mobileStoreRestorePurchases</b> is used to restore previously completed purchases. What it does is to instruct the store to re-send notifications of previously completed purchases.<p>If the request is successful, then a purchaseStateUpdate message is returned, with pState = </p><p></p><p></p><p></p><p></p><note> : Before calling this command, call <command tag="mobileStoreEnablePurchaseUpdates">mobileStoreEnablePurchaseUpdates</command> to enable communication with the store (via <message tag="purchaseStateUpdate">purchaseStateUpdate</message> messages)</note><p></p><p></p><p></p><note> : This command would typically be called the first time an app is run after installation on a new device to restore any items bought through the app.</note><p></p><p></p><p></p><note> : Consumable products cannot be restored, with an exception when interacting with Google Play Store in-app purchasing API, where it treats consumables exactly the same way as non-consumables.</note><p></p><p></p><p></p><note> : For iOS, non-renewing subscriptions cannot be restored, due to technical restrictions imposed by Apple. This means that the developer is responsible for restoring non-renewing subscriptions and making them available across all devices she owns.</note></comments>	</description></doc>