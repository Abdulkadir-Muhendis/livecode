module com.livecode.mathfoundation

public foreign handler MCMathFoundationExecRoundRealToNearest(inout Target as double) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationExecRoundNumberToNearest(inout Target as number) as undefined binds to "<builtin>"

public foreign handler MCMathFoundationEvalRoundedRealToNearest(in Target as double, out Value as double) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationEvalRoundedNumberToNearest(in Target as number, out Value as number) as undefined binds to "<builtin>"

public foreign handler MCMathFoundationEvalFloorReal(in Target as double, out Value as double) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationEvalFloorNumber(in Target as number, out Value as number) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationEvalCeilingReal(in Target as double, out Value as double) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationEvalCeilingNumber(in Target as number, out Value as number) as undefined binds to "<builtin>"

--

//public constant pi = 3.14159265358979323846

--

/*
Summary:    Rounds <Target> to the nearest integer.
Target:     An expression that evaluates to a numeric container.

Description:
Replaces <Target> with the greatest integer less than or equal to <Target>, or the least integer greater than or equal to <Target> depending on which is closest. If <Target> is exactly halfway between two integers, rounds to the one with greatest absolute value.

*/

syntax RoundToNearest is statement
    "round" <Target: Expression>
begin 
    MCMathFoundationExecRoundRealToNearest(Target)
    MCMathFoundationExecRoundNumberToNearest(Target)
end syntax

/*
Summary:    Rounds <Target> to the nearest integer.
Target:     An expression that evaluates to a number.
output:		The rounded value of <Target>

Description:
Return the greatest integer less than or equal to <Target>, or the least integer greater than or equal to <Target> depending on which is closest. If <Target> is exactly halfway between two integers, returns the one with greatest absolute value.

*/

syntax RoundedToNearest is prefix operator with precedence 1
    "the" "rounded" "of" <Target: Expression>
begin 
    MCMathFoundationEvalRoundedRealToNearest(Target, output)
    MCMathFoundationEvalRoundedNumberToNearest(Target, output)
end syntax

--

/* 
Summary:    Returns the floor of <Target>.
Target:     An expression that evaluates to a number.
output:     The greatest integer less than or equal to <Target>.

*/


syntax FloorOperator is prefix operator with precedence 1
    "the" "floor" "of" <Target: Expression>
begin
    MCMathFoundationEvalFloorReal(Target, output)
    MCMathFoundationEvalFloorNumber(Target, output)
end syntax

/* 
Summary:    Returns the ceiling of <Target>.
Target:     An expression that evaluates to a number.
output:     The least integer greater than or equal to <Target>.

*/

syntax CeilOperator is prefix operator with precedence 1
    "the" "ceiling" "of" <Target: Expression>
begin
    MCMathFoundationEvalCeilingReal(Target, output)
    MCMathFoundationEvalCeilingNumber(Target, output)
end syntax

end module