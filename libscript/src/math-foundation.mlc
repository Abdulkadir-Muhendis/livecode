module com.livecode.mathfoundation

--

public foreign handler MCMathFoundationExecRoundRealToNearest(inout Target as double) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationExecRoundNumberToNearest(inout Target as number) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationEvalFloorOfReal(in Target as double, out Value as double) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationEvalFloorOfNumber(in Target as number, out Value as number) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationEvalCeilOfReal(in Target as double, out Value as double) as undefined binds to "<builtin>"
public foreign handler MCMathFoundationEvalCeilOfNumber(in Target as number, out Value as number) as undefined binds to "<builtin>"

--

//public constant pi is 3.14159265358979323846

--

/*
Rounds towards zero for negative numbers.

Summary:    Rounds <Target> to the nearest integer, i.e. the greatest integer less than 
            or equal to <Target>, or the least integer greater than or equal to <Target> 
            depending on which is closest.
            If <Target> is exactly halfway between two integers, rounds to the one with greatest
            absolute value.

Target:     An expression that evaluates to a number.

*/

syntax RoundToNearest is statement
    "round" <Target: Expression>
begin 
    MCMathFoundationExecRoundRealToNearest(Target)
    MCMathFoundationExecRoundNumberToNearest(Target)
end syntax

--

/* 
Summary:    Returns the floor of <Target>.
Target:     An expression that evaluates to a number.
output:     The greatest integer less than or equal to <Target>.

*/


syntax FloorOperator is prefix operator with precedence 1
    "the" "floor" "of" <Target: Expression>
begin
    MCMathFoundationEvalFloorOfReal(Target, output)
    MCMathFoundationEvalFloorOfNumber(Target, output)
end syntax

/* 
Summary:    Returns the ceiling of <Target>.
Target:     An expression that evaluates to a number.
output:     The least integer greater than or equal to <Target>.

*/

syntax CeilOperator is prefix operator with precedence 1
    "the" "ceiling" "of" <Target: Expression>
begin
    MCMathFoundationEvalCeilOfReal(Target, output)
    MCMathFoundationEvalCeilOfNumber(Target, output)
end syntax

end module