module com.livecode.itemchunk

foreign handler FetchItemOf(in Index as index, in Target as string, out Value as string) as undefined binds to "<builtin>"
foreign handler StoreItemOf(in Value as string, in Index as index, inout Target as string) as undefined binds to "<builtin>"
foreign handler FetchItemRangeOf(in Start as index, in Finish as index, in Target as data, out Value as string) as undefined binds to "<builtin>"
foreign handler StoreItemRangeOf(in Value as string, in Start as index, in Finish as index, inout Target as string) as undefined binds to "<builtin>"

foreign handler EvalNumberOfItemsIn(in Target as string, out Count as index) as undefined binds to "<builtin>"

foreign handler EvalIsAmongTheItemsOf(in Needle as string, in Target as string, out Result as bool) as undefined binds to "<builtin>"
foreign handler EvalIsNotAmongTheItemsOf(in Needle as string, in Target as string, out Result as bool) as undefined binds to "<builtin>"

foreign handler EvalOffsetOfItemIn(in Needle as string, in Target as string, out Offset as index) as undefined binds to "<builtin>"

--

syntax SingletonItemOf is prefix operator with precedence 1
	"item" <Index: Expression> "of" <Target: Expression>
begin
	FetchItemOf(Index, Target, output)
	StoreItemOf(input, Index, Target)
end syntax

syntax RangeItemOf is prefix operator with precedence 1
	"item" <Start: Expression> "to" <Finish: Expression> "of" <Target: Expression>
begin
	FetchItemRangeOf(Start, Finish, Target, output)
	StoreItemRangeOf(input, Start, Finish, Target)
end syntax

syntax CountItemsOf is prefix operator with precedence 1
	"the" "number" "of" "items" "in" <Target: Expression>
begin
	EvalNumberOfItemsIn(Target, output)
end syntax

syntax AmongItemsOf is left binary operator with precedence 1
	<Needle: Expression> "is" "among" "the" "items" "of" <Target: Expression>
begin
	EvalIsAmongTheItemsOf(Needle, Target, output)
end syntax

syntax NotAmongItemsOf is left binary operator with precedence 1
	<Needle: Expression> "is" "not" "among" "the" "items" "of" <Target: Expression>
begin
	EvalIsNotAmongTheItemsOf(Needle, Target, output)
end syntax

syntax ItemOffset is prefix operator with precedence 1
	"the" "offset" "of" "item" <Needle: Expression> "in" <Target: Expression>
begin
	EvalOffsetOfItemIn(Needle, Target, output)
end syntax

--

end module