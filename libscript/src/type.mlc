module com.livecode.type

public foreign handler MCTypeEvalIsEmpty(in Target as any, out Value as bool) as undefined binds to "<builtin>"
public foreign handler MCTypeEvalIsNotEmpty(in Target as any, out Value as bool) as undefined binds to "<builtin>"
public foreign handler MCTypeEvalIsDefined(in Target as optional any, out Value as bool) as undefined binds to "<builtin>"
public foreign handler MCTypeEvalIsNotDefined(in Target as optional any, out Value as bool) as undefined binds to "<builtin>"

/*
Summary:    Determines whether <Target> is empty or not.

Target:     Any expression
output:     Returns true if the given expression <Target> evaluates to the empty value of that type, and false otherwise.

*/

syntax IsEmpty is postfix operator with precedence 1
    <Target: Expression> "is" "empty"
begin
    MCTypeEvalIsEmpty(Target, output)
end syntax

/*
Summary:    Determines whether <Target> is empty or not.

Target:     Any expression
output:     Returns false if the given expression <Target> evaluates to the empty value of that type, and true otherwise.

*/

syntax IsNotEmpty is postfix operator with precedence 1
	<Target: Expression> "is not" "empty"
begin
	MCTypeEvalIsNotEmpty(Target, output)
end syntax

--

/*
Summary:    Determines whether <Target> is defined or not.

Target:     Any expression
output:     Returns true if the given expression <Target> is defined, and false if not.

*/

syntax IsDefined is postfix operator with precedence 1
	<Target: Expression> "is" "defined"
begin
	MCTypeEvalIsDefined(Target, output)
end syntax

/*
Summary:    Determines whether <Target> is defined or not.

Target:     Any expression
output:     Returns false if the given expression <Target> is defined, and true if not.

*/

syntax IsNotDefined is postfix operator with precedence 1
	<Target: Expression> "is not" "defined"
begin
	MCTypeEvalIsNotDefined(Target, output)
end syntax

--

end module
