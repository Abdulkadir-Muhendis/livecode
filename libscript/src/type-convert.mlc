/* 
This module specifies the syntax for the complex type conversion operations available in modular LiveCode 
*/

module com.livecode.typeconvert

public foreign handler MCTypeConvertExecSplitStringByDelimiter(in Target as string, in Delimiter as string, out Value as list) as undefined binds to "<builtin>"
public foreign handler MCTypeConvertExecCombineListWithDelimiter(in Target as list, in Delimiter as string, out Value as string) as undefined binds to "<builtin>"

--

/*
Summary:        Splits the string in <Target> into a list of strings, using <Delimiter>
                as the delimiter. After execution, the container <Target> is a list.

Target:         An expression that evaluates to a string container.
Delimiter:      An expression that evaluates to a string.

Example:
            put "first,second,third,fourth,fifth" into tVar
            split tVar by ","
            put element 1 of tVar into tFirstElement // tFirstElement contains "first"
*/

syntax StringSplitBy is statement
"split" <Target: Expression> "by" <Delimiter : Expression> "into" <Value: Expression>
begin
    MCTypeConvertExecSplitStringByDelimiter(Target, Delimiter, Value)
end syntax

/*
Summary:        Combines the list of strings in <Target>, using <Delimiter>
                as the delimiter. After execution, the container <Target> is a string.

Target:         An expression that evaluates to a list container.
Delimiter:      An expression that evaluates to a string.

Example:
            repeat with tDigit = 1 to 9
                put tDigit as string into element tDigit of tList
            end repeat
            combine tList with "," // tList contains "1,2,3,4,5,6,7,8,9"
*/

syntax CombineListWith is statement
    "combine" <Target: Expression> "with" <Delimiter : Expression> "into" <Value: Expression>
begin
    MCTypeConvertExecCombineListWithDelimiter(Target, Delimiter, Value)
end syntax

--

end module