library com.livecode.lcs_tests.core.extension

use com.livecode.engine
use com.livecode.lcs_tests.core.extension.support

public handler TestExtensionBridgeNames_ExecuteScript()
	execute script "return the version"
	return the result is a string
end handler

public handler TestExtensionBridgeNumbers_ExecuteScript()
	execute script "return 5+0"
	return the result is a number
end handler

public handler TestExtensionBridgeNames_Send()
	variable tScriptObject
	resolve script object "stack \qCoreEngineExtensions\q"
	put the result into tScriptObject
	test diagnostic tScriptObject

	send function "TestExtensionBridgeNames_Version" to tScriptObject
	return the result is a string
end handler

public handler TestExtensionBridgeArrays_EmptyToEmptyList(in pList as List) returns Boolean
	return pList is the empty list
end handler

public handler TestExtensionLibraryHandler(in pValue as Number)
end handler

public handler TestExtensionSupportModule_Handler()
	return SupportHandler() is "support handler"
end handler

public handler TestExtensionDelimiterAccess()
	return [the item delimiter, the line delimiter, the column delimiter, the row delimiter]
end handler

public handler TestExtensionExecuteScript_Do(in pScript as String, in pTarget as String, in pParams as List)
	if pParams is the empty list and pTarget is the empty string then
		execute script pScript
	else if pParams is the empty list and pTarget is not the empty string then
		resolve script object pTarget
		execute script pScript in the result
	else if pParams is not the empty list and pTarget is the empty string then
		execute script pScript with pParams
	else
		resolve script object pTarget
		execute script pScript in the result with pParams
	end if
	return the result
end handler

public handler TestExtensionLog_String()
	log "log"
end handler

public handler TestExtensionLog_Integer()
	log 1
end handler

public handler TestExtensionLog_List()
	log [1,2,3]
end handler

public handler TestExtensionLog_Array()
	log {"a": 1}
end handler

public handler TestExtensionLog_ScriptObject()
	resolve script object "button 1"
	log the result
end handler

public handler TestExtensionLog_DeletedScriptObject()
	variable tScriptObject as ScriptObject
	resolve script object "button 1" into tScriptObject
	execute script "delete button 1"
	log tScriptObject
end handler

end library
