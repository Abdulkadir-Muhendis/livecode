/*  
This module specifies the syntax definitions and bindings for operations on binary data in modular LiveCode.
*/

module com.livecode.binary

foreign handler ExecPutBytesBefore(in Source as data, inout Target as data) as undefined binds to "<builtin>"
foreign handler ExecPutBytesAfter(in Source as data, inout Target as data) as undefined binds to "<builtin>"

foreign handler EvalConcatenateBytes(in Left as data, in Right as data, out Result as data) as undefined binds to "<builtin>"

foreign handler EvalContainsBytes(in Target as data, in Needle as data, out Value as bool) as undefined binds to "<builtin>"

--

/*
Summary:            Prepends <Source> bytes to <Target> bytes.

Source: 			An expression which evaluates to binary data.
Target: 			An expression which evaluates to a binary container.

Example: 			put tPrefixData before tData
*/

syntax PutBytesBefore is statement
    "put" <Source: Expression> "before" <Target: Expression>
begin
    ExecPutBytesBefore(Source, Target)
end syntax

/*
Summary:            Appends <Source> bytes to <Target> bytes.

Source: 			An expression which evaluates to binary data.
Target: 			An expression which evaluates to a binary container.

Example: 			put tSuffixData after tData

Related: 			PutBytesAfter
*/

syntax PutBytesAfter is statement
    "put" <Source: Expression> "after" <Target: Expression>
begin
    ExecPutBytesAfter(Source, Target)
end syntax

--

/*
Summary:            Concatenates <Left> and <Right>.

Left: 				An expression which evaluates to binary data.
Right: 				An expression which evaluates to binary data.
output: 			Binary data consisting of the value of the left hand expression with the value of the right hand expression appended to the end.

Example: 			put tLeft & tRight into tConcatenated
*/

syntax ConcatenateBytes is left binary operator with precedence 2
    <Left: Expression> "&" <Right: Expression>
begin
    EvalConcatenateBytes(Left, Right, output)
end syntax

--

end module